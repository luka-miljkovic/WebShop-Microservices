name: dockercompose3480748212475598791
services:
  apigateway:
    build:
      context: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      dockerfile: ApiGateway/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ApiGateway
      target: base
    container_name: api-gateway
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: apigateway:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/ApiGateway.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8007"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices\ApiGateway
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8001"
      protocol: tcp
  customerservice:
    build:
      context: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      dockerfile: CustomerService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CustomerService
      target: base
    container_name: customer-api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: customerdb
      DB_NAME: dms_customer
      DB_SA_PASSWORD: pa55w0rd!
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: customerservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/CustomerService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices\CustomerService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  deliverydb:
    container_name: delivery-db
    environment:
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.34-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "8145"
      protocol: tcp
  deliveryservice:
    build:
      context: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      dockerfile: DeliveryService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DeliveryService
      target: base
    container_name: delivery-service
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: deliverydb
      DB_NAME: dms_delivery
      DB_ROOT_PASSWORD: admin
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: deliveryservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/DeliveryService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices\DeliveryService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  orderdb:
    container_name: order-db
    image: mongo
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 27017
      published: "8005"
      protocol: tcp
  orderservice:
    build:
      context: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      dockerfile: OrderService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: OrderService
      target: base
    container_name: order-service
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: orderdb
      DB_NAME: dms_order
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: orderservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/OrderService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices\OrderService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  productdb:
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.34-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "8003"
      protocol: tcp
  productservice:
    build:
      context: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      dockerfile: ProductService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ProductService
      target: base
    container_name: product-service
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DB_HOST: productdb
      DB_NAME: dms_product
      DB_ROOT_PASSWORD: admin
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: productservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/ProductService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices\ProductService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\Documents\GitHub\WebShop-Microservices\WebShop-Microservices
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Teodora\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  rabbitmq:
    container_name: my-rabbit
    image: rabbitmq:3-management-alpine
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
networks:
  backend:
    name: dockercompose3480748212475598791_backend