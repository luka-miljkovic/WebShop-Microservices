version: '3.4'

networks:
  backend:

services:
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment: 
      - ACCEPT_EULA=Y
    networks:
      - backend
    ports:
      - 8001:1433

  customerservice:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerservice
    build:
      context: .
      dockerfile: CustomerService/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=customerdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=pa55w0rd!

  productdb:
    container_name: product-db
    image: mysql:8.0.34-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=admin
    ports:
     - 8003:3306
    networks:
     - backend

  productservice:
    container_name: product-service
    image: ${DOCKER_REGISTRY-}productservice
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=productdb
      - DB_NAME=dms_product
      - DB_ROOT_PASSWORD=admin

  orderdb:
    container_name: order-db
    image: mongo
    ports:
      - 8005:27017
    networks:
      - backend

  orderservice:
    container_name: order-service
    image: ${DOCKER_REGISTRY-}orderservice
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=orderdb
      - DB_NAME=dms_order

  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8007:80
    networks:
      - backend
